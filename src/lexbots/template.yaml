AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >
  Create the main Lexbot that will branch off to department bots

Parameters:
  Project:
    Type: String
    Description: Used for tagging
  Environment:
    Type: String
    Description: Used for tagging
  Prefix:
    Type: String
    Description: Will be pre-pended to your bots, intents and custom slots
  Locale:
    Type: String
    Default: "en_US"
  VoiceId:
    Type: String
    Default: "Joanna"
  SessionTTLSeconds:
    Type: Number
    Default: 300
  LexDataTableName:
    Type: String
    Description: Table to save Lex data
  ConversationLogBucket:
    Type: String
    Description: Logs Lexbot Audio Conversations
  CustomLexCFResourcesArn:
    Type: String
    Description: This is required by Custom Cloudformation resources
  BotName:
    Type: String
    Description: Name of bot for cloudwatch group name
    Default: "RoutingBot"
  ConnectInstance:
    Type: String
    Description: Full Instance ARN

Globals:
  Function:
    Timeout: 8
    Runtime: nodejs18.x
    CodeUri: .
    Environment:
      Variables:
        STAGE: !Ref Environment
        REGION: !Ref AWS::Region
        LEX_DATA_TABLE: !Ref LexDataTableName
        LEX_DATA_TTL_DAYS: 30
        CLOUDWATCH_LOG_GROUP: !Ref RoutingCloudwatchLogGroup

Resources:
  # ############################
  # Intent Fulfillment lambdas
  # ############################
  RoutingCloudwatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      # KmsKeyId: String
      LogGroupName: !Sub "lex_${Prefix}_${BotName}LogGroup"

  RoutingLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Policies:
        - PolicyName: RoutingLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: tableAccess
                Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:DeleteItem
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:DescribeTable
                  - dynamodb:ConditionCheckItem
                Resource:
                  - !Sub "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${LexDataTableName}"
              - Sid: cloudwatchLogs
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource:
                  - !GetAtt RoutingCloudwatchLogGroup.Arn
                  - Fn::Join:
                      - ":"
                      - - "arn:aws:logs"
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - "log-group:*"

  RoutingFulfillmentLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lexbots/src/index.RouterIntent
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LexDataTableName
        - Statement:
            - Sid: cloudwatchLogs
              Effect: "Allow"
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                - logs:DescribeLogStreams
              Resource:
                - !GetAtt RoutingCloudwatchLogGroup.Arn
                - Fn::Join:
                    - ":"
                    - - "arn:aws:logs"
                      - Ref: AWS::Region
                      - Ref: AWS::AccountId
                      - "log-group:*"

  CloudWatchLexRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lex.amazonaws.com
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: !Sub "${BotName}CloudwatchGroup"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: cloudwatchLogs
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt RoutingCloudwatchLogGroup.Arn
                  - Fn::Join:
                      - ":"
                      - - "arn:aws:logs"
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - "log-group:*"
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                Resource: !Sub "arn:aws:s3:::${ConversationLogBucket}/*"

  # Creates the bot resource
  SampleRoutingBot:
    Type: Custom::LexV2Bot
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      name: !Ref BotName
      dataPrivacy:
        childDirected: false # this will always be false
      idleSessionTTLInSeconds: !Ref SessionTTLSeconds
      roleArn: !GetAtt CloudWatchLexRole.Arn
      description: Determine routing to Contact Flows based on intents for department bots
      botTags:
        Project: !Ref Project
        Environment: !Ref Environment

  # Creates the Locale which determines the language
  # Intents and slots are created by language, so associated with the Locale
  SampleEnglishBotLocale:
    DependsOn: SampleRoutingBot
    Type: Custom::LexV2Locale
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      nluIntentConfidenceThreshold: 0.70
      description: !Sub "${BotName} in English"
      voiceSettings:
        voiceId: "Joanna"

  # Slots are defined for Intents to fill
  # SampleValues are the values that can be saved to satisfy the slot
  # Synonyms are words that will be translated into the sampleValue when saved
  SupportedHardwareLiteSlotType:
    DependsOn:
      - SampleEnglishBotLocale
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: SupportHardwareLt
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: keyboard
          synonyms:
            - value: keyboard
        - sampleValue:
            value: mouse
          synonyms:
            - value: mouse
        - sampleValue:
            value: desktop
          synonyms:
            - value: pc
            - value: computer
            - value: aio
            - value: all in one
        - sampleValue:
            value: printer
          synonyms:
            - value: laserjet
            - value: inkjet
            - value: deskjet
            - value: printer
        - sampleValue:
            value: scanner
          synonyms:
            - value: scanner
        - sampleValue:
            value: graphics
          synonyms:
            - value: display
            - value: screen
            - value: monitor
        - sampleValue:
            value: audio
          synonyms:
            - value: speaker
            - value: headset
            - value: headphone
            - value: mic
            - value: microphone
        - sampleValue:
            value: drive
          synonyms:
            - value: CD drive
            - value: DVD
            - value: DVD drive
            - value: CD
        - sampleValue:
            value: laptop
          synonyms:
            - value: notebook
            - value: netbook
            - value: chromebook
            - value: spectre
            - value: envy
            - value: omen
            - value: battery
            - value: batteries
            - value: elitebook
            - value: workstation

  TechSupportSlotType:
    DependsOn:
      - SampleEnglishBotLocale
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: TechSupport
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: "tech support"
        - sampleValue:
            value: "techsupport"
        - sampleValue:
            value: "repair"
        - sampleValue:
            value: "technical issues"
        - sampleValue:
            value: "technical"
        - sampleValue:
            value: "hardware support"
        - sampleValue:
            value: "problem with"
        - sampleValue:
            value: "local service center"
        - sampleValue:
            value: "technical support"
        - sampleValue:
            value: "problem"
        - sampleValue:
            value: "fix"
        - sampleValue:
            value: "technical help"
        - sampleValue:
            value: "set up"
        - sampleValue:
            value: "help with"
        - sampleValue:
            value: "check support"
        - sampleValue:
            value: "technical service"
        - sampleValue:
            value: "service center"
        - sampleValue:
            value: "issue"
        - sampleValue:
            value: "setting up"
        - sampleValue:
            value: "technician"
        - sampleValue:
            value: "configure"
        - sampleValue:
            value: "repaired"
        - sampleValue:
            value: "install"
        - sampleValue:
            value: "repair service"
        - sampleValue:
            value: "service"
        - sampleValue:
            value: "technical difficulties"
        - sampleValue:
            value: "reset"
        - sampleValue:
            value: "fixed"
        - sampleValue:
            value: "support"

  HardwareIssuesSlotType:
    DependsOn:
      - SampleEnglishBotLocale
      - TechSupportSlotType
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: HardwareIssues
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: "broken"
          synonyms:
            - value: "doesn't work as expected"
            - value: "totally broken"
            - value: "isn't working"
            - value: "isn't working properly"
            - value: "is not working"
            - value: "is not working properly"
            - value: "doesn't work"
            - value: "does not work"
            - value: "doesn't work properly"
            - value: "does not work properly"
            - value: "issue"
            - value: "dead"
            - value: "crashed"
            - value: "stopped responding"
            - value: "not responding"
            - value: "flashing lights"
        - sampleValue:
            value: "restart"
          synonyms:
            - value: "restarts unexpectedly"
            - value: "restarted unexpectedly"
            - value: "shuts down unexpectedly"
        - sampleValue:
            value: "work"
        - sampleValue:
            value: "no sound"
          synonyms:
            - value: "low volume"
            - value: "no volume"
            - value: "no audio"
            - value: "crackling noise"
            - value: "background noise"
            - value: "any sound"
            - value: "any audio"
            - value: "any volume"
        - sampleValue:
            value: "error message"
          synonyms:
            - value: "error"
            - value: "failure"
            - value: "failure message"
            - value: "restoration incomplete"
            - value: "device not found"
            - value: "Cartridge installed"
            - value: "error code"
            - value: "memory dump"
            - value: "windows error"
            - value: "operating system issue"
            - value: "windows issue"
        - sampleValue:
            value: "charging issue"
          synonyms:
            - value: "will not charge"
            - value: "no charge"
            - value: "won't charge"
            - value: "battery issue"
            - value: "not charging"
            - value: "draining too fast"
            - value: "battery is enlarging"
            - value: "swelling"
            - value: "bulging"
            - value: "power adaptor"
            - value: "brick"
        - sampleValue:
            value: "flickering"
        - sampleValue:
            value: "printer issues"
          synonyms:
            - value: "printing"
            - value: "out of paper"
            - value: "paper width mismatch"
            - value: "paper length mismatch"
            - value: "won't print"
            - value: "print issue"
            - value: "can't print"
            - value: "scan to email"
            - value: "a defective cartridge"
            - value: "defective cartridge"
            - value: "won't recognize cartridge"
            - value: "incompatible cartridge"
            - value: "cartridge"
            - value: "carriage jam"
            - value: "jammed"
            - value: "alignment error"
            - value: "alignment"
            - value: "cartridge depleted"
            - value: "incorrect page count"
            - value: "wrong page count"
            - value: "pages not correct"
            - value: "low ink"
            - value: "paper stuck"
            - value: "paper jam"
            - value: "print quality"
            - value: "lines on paper"
            - value: "lines on the paper"
            - value: "lines on printout"
            - value: "lines on the printout"
            - value: "color printouts"
            - value: "black and white printouts"
            - value: "smudged ink"
            - value: "copy"
            - value: "scan"
            - value: "print photos"
            - value: "colour photos"
            - value: "turn on double sided printing"
            - value: "turn off double sided printing"
            - value: "turn on both side printing"
            - value: "turn off both side printing"
            - value: "turn on duplex printing"
            - value: "turn off duplex printing"
            - value: "print from my phone"
            - value: "trying to print from a phone"
            - value: "airprint"
            - value: "air print"
            - value: "e Print"
            - value: "scan a document"
        - sampleValue:
            value: "sleep"
          synonyms:
            - value: "go into sleep"
            - value: "go to sleep"
            - value: "go into hibernation"
            - value: "to sleep"
            - value: "from sleep"
            - value: "hibernate"
            - value: "hibernation"
            - value: "into hibernation"
            - value: "out of hibernation"
        - sampleValue:
            value: "slow performance"
          synonyms:
            - value: "slow"
            - value: "freezes"
            - value: "stuck"
            - value: "freezing"
            - value: "hangs"
            - value: "locks up"
            - value: "running slow"
            - value: "running very slow"
            - value: "very slow"
            - value: "extremely slow"
            - value: "takes a lot of time"
            - value: "really slow"
        - sampleValue:
            value: "print"
        - sampleValue:
            value: "noise"
          synonyms:
            - value: "beeping sound"
            - value: "beeping sounds"
            - value: "grinding noise"
            - value: "grinding noises"
            - value: "grinding sound"
            - value: "grinding sounds"
            - value: "loud noise"
            - value: "loud noises"
            - value: "loud sound"
            - value: "loud sounds"
            - value: "mechanical noise"
            - value: "mechanical noises"
            - value: "screeching sound"
            - value: "screeching sounds"
            - value: "screeching noise"
            - value: "screeching noises"
            - value: "strange noise"
            - value: "strange noises"
            - value: "strange sound"
            - value: "strange sounds"
        - sampleValue:
            value: "no boot"
          synonyms:
            - value: "won't boot"
            - value: "won't turn on"
            - value: "won't start"
            - value: "will not start"
            - value: "looping"
            - value: "boot loop"
            - value: "no power"
            - value: "BSOD"
            - value: "boot"
            - value: "booting"
            - value: "login to windows"
            - value: "load"
            - value: "load windows"
            - value: "windows not loading"
        - sampleValue:
            value: "cosmetic"
          synonyms:
            - value: "cracked"
            - value: "shattered"
            - value: "dinted"
            - value: "chipped"
            - value: "damaged"
            - value: "spilt liquid"
            - value: "spilt coffee"
            - value: "spilt drink"
            - value: "split tea"
            - value: "spilt milk"
            - value: "spilt coke"
            - value: "spilt cola"
            - value: "broke"
            - value: "dropped"
        - sampleValue:
            value: "drivers"
          synonyms:
            - value: "install drivers"
            - value: "missing drivers"
            - value: "audio drivers"
            - value: "graphics drivers"
            - value: "display drivers"
            - value: "USB drivers"
            - value: "display adaptors"
            - value: "audio adaptors"
            - value: "printer driver"
            - value: "issue with drivers"
            - value: "conflicting drivers"
            - value: "driver conflict"
            - value: "thirty two bit driver"
            - value: "sixty four bit driver"
            - value: "windows driver"
            - value: "thirty two bit windows"
            - value: "sixty four bit windows"
            - value: "bios"
        - sampleValue:
            value: "connect"
          synonyms:
            - value: "wireless"
            - value: "bluetooth"
            - value: "USB"
            - value: "LAN"
            - value: "hook"
            - value: "network"
            - value: "internet"
            - value: "wi-fi"
            - value: "gets disconnected"
            - value: "reconnect"
            - value: "offline"
            - value: "wireless adaptor"
            - value: "wifi adaptor"
            - value: "network drivers"
            - value: "wireless driver"
            - value: "isn't connecting"
            - value: "is not connecting"
            - value: "having connectivity issues"
            - value: "connect to the internet"
            - value: "connect to the wifi"
            - value: "connect to wifi"
            - value: "connect to this wireless"
            - value: "connect to wireless"
            - value: "wifi"
            - value: "internet connection"
            - value: "internet service"
        - sampleValue:
            value: "display issue"
          synonyms:
            - value: "blank screen"
            - value: "blue screen"
            - value: "no display"
            - value: "green static"
            - value: "showing bright pink"
            - value: "small dots"
            - value: "is green"
            - value: "black screen"
            - value: "too dim"
            - value: "lines on the display"
            - value: "no video"

  AgentTypeSlotType:
    DependsOn:
      - SampleEnglishBotLocale
      - HardwareIssuesSlotType
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: AgentTypes
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: typeone
          synonyms:
            - value: "a person"
            - value: "associate"
            - value: "operator"
            - value: "someone"
            - value: "an associate"
            - value: "an operator"
        - sampleValue:
            value: typetwo
          synonyms:
            - value: "customer service representative"
            - value: "customer support representative"
            - value: "agent representative"
            - value: "service representative"
            - value: "a service representative"
            - value: "live representative"
            - value: "a representative"
            - value: "representative please"
            - value: "customer service agent representative"
            - value: "customer representative"
            - value: "a customer service representative"
        - sampleValue:
            value: typethree
          synonyms:
            - value: "customer service agent"
            - value: "an agent"
            - value: "a customer service agent"

  BusinessPersonalSlotType:
    DependsOn:
      - SampleEnglishBotLocale
      - AgentTypeSlotType
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "BusinessPersonal"
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: "business"
          synonyms:
            - value: "professional"
            - value: "work"
            - value: "enterprise"
            - value: "office"
        - sampleValue:
            value: "personal"
          synonyms:
            - value: "home"
            - value: "personal"
            - value: "school"
            - value: "college"
            - value: "me"
            - value: "myself"

  YesNoSlotType:
    DependsOn:
      - SampleEnglishBotLocale
      - BusinessPersonalSlotType
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: YesNo
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: "no"
          synonyms:
            - value: "nope"
            - value: "I do not"
            - value: "no I don't"
            - value: "no I do not"
            - value: "no thank you"
            - value: "no"
            - value: "no it's not"
            - value: "it's not"
            - value: "no it isn't"
            - value: "wrong"
            - value: "incorrect"
            - value: "uh no"
            - value: "uhm no"
            - value: "not"
            - value: "i don't have it"
            - value: "i do not have it"
            - value: "where do i find it"
            - value: "where is it"
            - value: "how do I find it"
            - value: "how do I get it"
            - value: "help me find"
            - value: "help me find it"
            - value: "i do not know"
            - value: "i don't know"
        - sampleValue:
            value: "yes"
          synonyms:
            - value: "yep"
            - value: "yeah"
            - value: "I do"
            - value: "yes I do"
            - value: "you know it"
            - value: "yes"
            - value: "uh yes"
            - value: "uhm yeah"
            - value: "affirmative"
            - value: "correct"
            - value: "it is correct"
            - value: "it is"
            - value: "that is correct"
            - value: "you got it"
            - value: "I have it"

  TargetDeviceSlotType:
    DependsOn:
      - SampleEnglishBotLocale
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "TargetDevice"
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: "desktop"
          synonyms:
            - value: PC
            - value: computer
        - sampleValue:
            value: printer

  SalesQuerySlotType:
    DependsOn:
      - SampleEnglishBotLocale
      - TargetDeviceSlotType
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "SalesQuery"
      valueSelectionSetting:
        resolutionStrategy: "OriginalValue"
      slotTypeValues:
        - sampleValue:
            value: "shop"
        - sampleValue:
            value: "purchasing"
        - sampleValue:
            value: "want"
        - sampleValue:
            value: "ordering"
        - sampleValue:
            value: "buy"
        - sampleValue:
            value: "buying"
        - sampleValue:
            value: "purchase"
        - sampleValue:
            value: "replace"
        - sampleValue:
            value: "place order"
        - sampleValue:
            value: "replacement"
        - sampleValue:
            value: "shopping"
        - sampleValue:
            value: "order"

  ThingToPurchaseSlotType:
    DependsOn:
      - SampleEnglishBotLocale
      - SalesQuerySlotType
    Type: Custom::LexV2SlotType
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.0"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "ThingToPurchase"
      valueSelectionSetting:
        resolutionStrategy: "TopResolution"
      slotTypeValues:
        - sampleValue:
            value: "cord"
          synonyms:
            - value: "power cord"
        - sampleValue:
            value: "mouse"
        - sampleValue:
            value: "keyboard"
        - sampleValue:
            value: "desktop"
          synonyms:
            - value: "PC"
            - value: "computer"
        - sampleValue:
            value: "adapter"
          synonyms:
            - value: "power adapter"
        - sampleValue:
            value: "ink"
          synonyms:
            - value: "cartridge"
            - value: "ink cartridge"
            - value: "toner"
            - value: "ink for my printer"
            - value: "ink"
        - sampleValue:
            value: "printer"
          synonyms:
            - value: "laserjet"
            - value: "inkjet"
            - value: "deskjet"
            - value: "scanner"
            - value: "printer"
        - sampleValue:
            value: "monitor"
          synonyms:
            - value: "display"
            - value: "screen"
        - sampleValue:
            value: "laptop"
          synonyms:
            - value: "notebook"
            - value: "netbook"
            - value: "Envy"
            - value: "tablet"
        - sampleValue:
            value: "battery"
        - sampleValue:
            value: "care"
          synonyms:
            - value: "care"
            - value: "package"
            - value: "care package"
        - sampleValue:
            value: "cable"
          synonyms:
            - value: "power cable"

  ## ***************
  ##  Intents
  ## ***************
  SupportIntent:
    DependsOn:
      - SampleEnglishBotLocale
      - SupportedHardwareLiteSlotType
      - TechSupportSlotType
      - HardwareIssuesSlotType
    Type: Custom::LexV2Intent
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.1"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "Support"
      description: Select the Support Contact Flow
      sampleUtterances:
        - utterance: "{techSupport} (for)? (a)? (my|the)? {supportedDevice}"
        - utterance: "{supportedDevice} (not|has|keeps getting|gets|is|won't|does|is not|does not)? {issue}"
        - utterance: "(i)? {techSupport}"
        - utterance: "{issue} (the|with)? {supportedDevice}"
        - utterance: "{supportedDevice} {techSupport}"
        - utterance: "(cannot)? {issue}"
        - utterance: "{issue} {techSupport}"
        - utterance: "repair (status)?"
        - utterance: "{techSupport} (for)? {issue}"
        - utterance: "(i have|I've got)? (a)? case (number)?"
        - utterance: "(connect|with)? (to|my)? {supportedDevice} (to work)?"
        - utterance: "{supportedDevice} (not)? connected"
        - utterance: "(i)? (want|would) (like)? (to) (speak|connect)? (to|with)? (a|an)? {techSupport} ({supportedDevice})?"
        - utterance: "i need (a|an|the|to)? (speak|speak to)? {techSupport} for my (new)? ({supportedDevice})?"
        - utterance: "i need {techSupport} to fix (my)? (new)? {supportedDevice}"
        - utterance: "(my)? {supportedDevice} (problem|issue)"
        - utterance: "(i)? (need)? help (with my|my|with)? (new)? {supportedDevice} (work|not work|not working)?"
        - utterance: "(i|i'm)? (have)? (difficult)? (printing|print) (error|issue)?"
        - utterance: "printer (won't|is not|would not|trouble)? print"
        - utterance: "i need (tech support|techsupport|support|tech help|technical support|technical help) (to|with)? (fix|repair)? (my)? ({supportedDevice})?"
        - utterance: "(problem)? (with)? (connectivity|connection) problem"
        - utterance: "(my)? serial number (is)?"
        - utterance: "my {supportedDevice} doesn't work"
        - utterance: "help on {supportedDevice}"
        - utterance: "i need support for my {supportedDevice}"
        - utterance: "(someone)? (about)? (i)? need (tech support|technical support) for my {supportedDevice}"
        - utterance: "i need to speak with a tech support (please)?"
        - utterance: "scanner problem"
        - utterance: "check on (my)? case (number|id)?"
        - utterance: "(tech|technical) (assistance|assistant)"
        - utterance: "i need to (talk to)? (tech support|tech person) for (my)? (a)? (laptop|printer|computer|scanner|mouse|keyboard|monitor)"
      fulfillmentCodeHook:
        enabled: true
      dialogCodeHook:
        enabled: true
      slots:
        - slotName: supportedDevice
          priority: 1
          slotTypeId: !GetAtt SupportedHardwareLiteSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    ssmlMessage:
                      value: '<speak><amazon:domain name="conversational">What device are you calling about? Please say Printer, Notebook or Desktop</amazon:domain></speak>'
        - slotName: techSupport
          priority: 3
          slotTypeId: !GetAtt TechSupportSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "?"
        - slotName: issue
          priority: 2
          slotTypeId: !GetAtt HardwareIssuesSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "What's the problem with your device?"

  OrderStatusIntent:
    DependsOn:
      - SampleEnglishBotLocale
      - SupportIntent
    Type: Custom::LexV2Intent
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.1"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "OrderStatus"
      description: Select the Order Status Flow
      sampleUtterances:
        - utterance: "(Whats|wheres|what's|where's|what|where)? (is)? (my)? order (status|shipped) (please)?"
        - utterance: "I (need|want|would like) (to)? (get)? my order (status)? (please)?"
        - utterance: "I (need|wanna|want to) (know|check) (if my order shipped|my order status)"
        - utterance: "I'd like to get order status (please)?"
      fulfillmentCodeHook:
        enabled: true
      dialogCodeHook:
        enabled: true

  CustomerServiceIntent:
    DependsOn:
      - SampleEnglishBotLocale
      - SupportedHardwareLiteSlotType
      - AgentTypeSlotType
      - BusinessPersonalSlotType
      - OrderStatusIntent
    Type: Custom::LexV2Intent
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.1"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "CustomerService"
      description: Select the Customer Service Contact Flow
      sampleUtterances:
        - utterance: "(want|need)? to talk to (a|an|the)? {agentTypes}"
        - utterance: "want {agentTypes}"
        - utterance: "need {agentTypes}"
        - utterance: "(i)? (want|would|need)? (like)? (to) (speak|connect)? (to|with)? (an)? {agentTypes} (please)?"
        - utterance: "(please|can) (you)? (connect) (me) (to) (an|the) {agentTypes} (please)?"
        - utterance: "(a|an|the)? claim (for)? {supportedDevice}"
        - utterance: "charged (twice|thrice|too many times|too much|a lot)?"
        - utterance: "i need help"
        - utterance: "(agent|representative|customer service|customer support|live person|person)"
        - utterance: "talk to (a|an|the)? {agentTypes} for {supportedDevice}"
        - utterance: "speak to a support (representative|agent|person)"
        - utterance: "(a)? {agentTypes} (please)?"
      fulfillmentCodeHook:
        enabled: true
      dialogCodeHook:
        enabled: true
      slots:
        - slotName: supportedDevice
          priority: 1
          slotTypeId: !GetAtt SupportedHardwareLiteSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "What device are you calling about? Please say Printer, Notebook or Desktop"
        - slotName: agentTypes
          priority: 2
          slotTypeId: !GetAtt AgentTypeSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "Who would you like to speak to?"
        - slotName: businessOrPersonal
          priority: 3
          slotTypeId: !GetAtt BusinessPersonalSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 3
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "Please tell us if your order was placed for business or personal use?"

  SalesIntent:
    DependsOn:
      - SampleEnglishBotLocale
      - TargetDeviceSlotType
      - SalesQuerySlotType
      - ThingToPurchaseSlotType
      - BusinessPersonalSlotType
    Type: Custom::LexV2Intent
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.1"
      prefix: !Ref Prefix
      botName: !Ref BotName
      localeId: !Ref Locale
      name: "Sales"
      description: Select the Sales Contact Flow
      sampleUtterances:
        - utterance: "{targetDevice} has run out"
        - utterance: "{buy} for {thingToPurchase}"
        - utterance: "{buy} {thingToPurchase} for (my|the)? {targetDevice}"
        - utterance: "(i)? {buy} (a)? {thingToPurchase} (for)?"
        - utterance: "({buy})? (a)? {thingToPurchase} for {businessPersonal}"
        - utterance: "(i)? (need|want|require|buy|purchase|replacement|buying|order|replace) (of|my)? ({thingToPurchase})?"
        - utterance: "i need to speak to someone about (purchasing|buying|buy|purchase)"
        - utterance: "i have questions about {thingToPurchase}"
        - utterance: "i want to (purchase|buy) a product"
        - utterance: "(i)? need (a)? replacement {thingToPurchase} (for)?"
        - utterance: "(i want to)? make a purchase"
        - utterance: "purchase a product"
        - utterance: "place an order"
        - utterance: "{thingToPurchase} order"
        - utterance: "i want to purchase (a)? ({thingToPurchase})?"
      fulfillmentCodeHook:
        enabled: true
      dialogCodeHook:
        enabled: true
      slots:
        - slotName: targetDevice
          priority: 2
          slotTypeId: !GetAtt TargetDeviceSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "What device are you buying {thingToPurchase} for?"
                  # variations:
                  #   - customPayload:
                  #       value: "{\"version\":1,\"contentType\":\"application/vnd.amazonaws.card.generic\",\"genericAttachments\":[]}"
        - slotName: buy
          priority: 5
          slotTypeId: !GetAtt SalesQuerySlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "What do you want to do?"
        - slotName: thingToPurchase
          priority: 1
          slotTypeId: !GetAtt ThingToPurchaseSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances: []
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "What are you wanting to purchase?"
        - slotName: businessPersonal
          priority: 4
          slotTypeId: !GetAtt BusinessPersonalSlotType.ID
          obfuscationSetting:
            obfuscationSettingType: "None"
          valueElicitationSetting:
            slotConstraint: Optional
            sampleUtterances:
              - utterance: "it's for {businessPersonal}"
              - utterance: "it's {businessPersonal}"
              - utterance: "{businessPersonal} use"
            promptSpecification:
              allowInterrupt: false
              maxRetries: 2
              messageGroups:
                - message:
                    plainTextMessage:
                      value: "To get you to the correct team I need to gather a few details.  Are you calling for personal or business use today?"

  RoutingFulfillmentLexPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt RoutingFulfillmentLambda.Arn
      Action: lambda:InvokeFunction
      Principal: lex.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:lex:"
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":bot-alias/"
          - !GetAtt SampleRoutingBot.ID
          - "/*"

  SampleRoutingBotAlias:
    DependsOn:
      - SalesIntent
      - CustomerServiceIntent
      - OrderStatusIntent
      - SupportIntent
      - RoutingFulfillmentLexPermission
    Type: Custom::LexV2Alias
    Properties:
      ServiceToken: !Ref CustomLexCFResourcesArn
      DeployVersion: "1.0.2"
      connectInstance: !Ref ConnectInstance
      prefix: !Ref Prefix
      botName: !Ref BotName
      name: live
      description: Determine queue
      botAliasLocaleSettings:
        en_US:
          enabled: true
          codeHookSpecification:
            lambdaCodeHook:
              lambdaARN: !GetAtt RoutingFulfillmentLambda.Arn
              codeHookInterfaceVersion: "1.0"
      conversationLogSettings:
        audioLogSettings:
          - destination:
              s3Bucket:
                logPrefix: RoutingBot
                s3BucketArn: !Sub "arn:aws:s3:::${ConversationLogBucket}"
            enabled: true
        textLogSettings:
          - destination:
              cloudWatch:
                logPrefix: RoutingBot
                cloudWatchLogGroupArn: !GetAtt RoutingCloudwatchLogGroup.Arn
            enabled: true

Outputs:
  RoutingBotName:
    Description: The name of the bot created for routing
    Value: !GetAtt SampleRoutingBot.Name
  RoutingBotAlias:
    Description: RoutingBot alias that was created
    Value: !GetAtt SampleRoutingBotAlias.Name
  RoutingBotId:
    Description: The name of the bot created for routing
    Value: !GetAtt SampleRoutingBot.ID
  RoutingBotAliasId:
    Value: !GetAtt SampleRoutingBotAlias.ID
  RoutingBot:
    Description: ARN of bot that was created
    Value: !Join
      - ""
      - - "arn:aws:lex:"
        - !Ref AWS::Region
        - ":"
        - !Ref AWS::AccountId
        - ":bot-alias/"
        - !GetAtt SampleRoutingBot.ID
        - "/"
        - !GetAtt SampleRoutingBotAlias.ID
